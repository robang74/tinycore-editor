--- src/shell/ash.c	2021-05-03 20:06:49.000000000 +0200
+++ src.new3/shell/ash.c	2021-08-13 14:42:09.755798987 +0200
@@ -456,7 +456,7 @@ struct globals_misc {
 	/* indicates specified signal received */
 	uint8_t gotsig[NSIG - 1]; /* offset by 1: "signal" 0 is meaningless */
 	uint8_t may_have_traps; /* 0: definitely no traps are set, 1: some traps may be set */
-	char *trap[NSIG];
+	char *trap[NSIG + 1]; /* increased by 1: trap ERR handler */
 	char **trap_ptr;        /* used only by "trap hack" */
 
 	/* Rarely referenced stuff */
@@ -5114,13 +5114,13 @@ clear_traps(void)
 	char **tp;
 
 	INT_OFF;
-	for (tp = trap; tp < &trap[NSIG]; tp++) {
+	for (tp = trap; tp < &trap[NSIG+1]; tp++) { /* increased by 1: trap ERR handler */
 		if (*tp && **tp) {      /* trap not NULL or "" (SIG_IGN) */
 			if (trap_ptr == trap)
 				free(*tp);
 			/* else: it "belongs" to trap_ptr vector, don't free */
 			*tp = NULL;
-			if ((tp - trap) != 0)
+			if ((tp - trap) != 0 && tp < &trap[NSIG])
 				setsignal(tp - trap);
 		}
 	}
@@ -10396,6 +10396,15 @@ evalcommand(union node *cmd, int flags)
 	FORCE_INT_ON;
 
  out:
+	if(status && trap[NSIG]) {
+		static bool recursive = 0;
+		if(!recursive) {
+			recursive = 1;
+			evalstring(trap[NSIG], 0);
+			recursive = 0;
+		}
+	}
+
 	if (cmd->ncmd.redirect)
 		popredir(/*drop:*/ cmd_is_exec);
 	unwindredir(redir_stop);
@@ -13713,7 +13722,7 @@ trapcmd(int argc UNUSED_PARAM, char **ar
 	nextopt(nullstr);
 	ap = argptr;
 	if (!*ap) {
-		for (signo = 0; signo < NSIG; signo++) {
+		for (signo = 0; signo < NSIG + 1; signo++) { /* increased by 1: trap ERR handler */
 			char *tr = trap_ptr[signo];
 			if (tr) {
 				/* note: bash adds "SIG", but only if invoked
@@ -13722,7 +13731,7 @@ trapcmd(int argc UNUSED_PARAM, char **ar
 				 * We are printing short names: */
 				out1fmt("trap -- %s %s\n",
 						single_quote(tr),
-						get_signame(signo));
+						(signo == NSIG) ? "ERR" : get_signame(signo));
 		/* trap_ptr != trap only if we are in special-cased `trap` code.
 		 * In this case, we will exit very soon, no need to free(). */
 				/* if (trap_ptr != trap && tp[0]) */
@@ -13748,7 +13757,7 @@ trapcmd(int argc UNUSED_PARAM, char **ar
 
 	exitcode = 0;
 	while (*ap) {
-		signo = get_signum(*ap);
+		signo = strstr(*ap, "ERR") ? NSIG : get_signum(*ap);
 		if (signo < 0) {
 			/* Mimic bash message exactly */
 			ash_msg("%s: invalid signal specification", *ap);
@@ -13767,7 +13776,7 @@ trapcmd(int argc UNUSED_PARAM, char **ar
 		}
 		free(trap[signo]);
 		trap[signo] = action;
-		if (signo != 0)
+		if (signo != 0 && signo < NSIG)
 			setsignal(signo);
 		INT_ON;
  next:
