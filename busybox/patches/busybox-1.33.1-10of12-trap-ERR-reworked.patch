--- src.0/shell/ash.c	2021-08-21 15:53:05.179524161 +0200
+++ src/shell/ash.c	2021-08-21 16:09:21.700004277 +0200
@@ -9209,7 +9209,7 @@ evaltree(union node *n, int flags)
 	case NCMD:
 		evalfn = evalcommand;
  checkexit:
-		if (eflag && !(flags & EV_TESTED))
+		if ((eflag || trap[NSIG]) && !(flags & EV_TESTED))
 			checkexit = ~0;
 		goto calleval;
 	case NFOR:
@@ -9283,8 +9283,24 @@ evaltree(union node *n, int flags)
 	 */
 	dotrap();
 
-	if (checkexit & status)
-		raise_exception(EXEND);
+	if (checkexit & status) {
+		if(trap[NSIG] && (Eflag || (!Eflag && !funcline))) {
+				static bool recursive = 0;
+				if(!recursive) {
+					int savelineno = lineno;
+					doingtrap = 1;
+					recursive = 1;
+					evalstring(trap[NSIG], 0);
+					recursive = 0;
+					doingtrap = 0;
+					lineno = savelineno;
+					if(eflag)
+						exitshell();
+			}
+		}
+		if(eflag)
+			raise_exception(EXEND);
+	}
 	if (flags & EV_EXIT)
 		raise_exception(EXEND);
 
@@ -10420,22 +10436,6 @@ evalcommand(union node *cmd, int flags)
 	FORCE_INT_ON;
 
  out:
-	if((status && trap[NSIG]) && (Eflag || (!Eflag && !funcline))){
-		static bool recursive = 0;
-		if(!recursive) {
-			int savelineno = lineno;
-			doingtrap = 1;
-			recursive = 1;
-			evalstring(trap[NSIG], 0);
-			status = exitstatus; //RAF: this fix the trap ERR patch
-			recursive = 0;
-			doingtrap = 0;
-			if (eflag) {
-				lineno = savelineno;
-				exitshell();
-			}
-		}
-	}
 
 	if (cmd->ncmd.redirect)
 		popredir(/*drop:*/ cmd_is_exec);
