--- src.orig/shell/ash.c	2021-08-16 12:46:23.704492716 +0200
+++ src/shell/ash.c	2021-08-16 16:14:25.058912889 +0200
@@ -443,8 +443,6 @@ struct globals_misc {
 # define debug optlist[17 + BASH_PIPEFAIL]
 #endif
 
-#define errexit ((eflag && !funcline) || Eflag)
-
 	/* trap handler commands */
 	/*
 	 * Sigmode records the current value of the signal handlers for the various
@@ -9211,7 +9209,7 @@ evaltree(union node *n, int flags)
 	case NCMD:
 		evalfn = evalcommand;
  checkexit:
-		if (errexit && !(flags & EV_TESTED))
+		if (eflag && !(flags & EV_TESTED))
 			checkexit = ~0;
 		goto calleval;
 	case NFOR:
@@ -9744,9 +9742,11 @@ evalfun(struct funcnode *func, int argc,
 	struct jmploc *volatile savehandler;
 	struct jmploc jmploc;
 	int e;
+	int savelineno;
 	int savefuncline;
 	char *savefuncname;
 
+	savelineno = lineno;
 	saveparam = shellparam;
 	savefuncline = funcline;
 	savefuncname = funcname;
@@ -9771,10 +9771,15 @@ evalfun(struct funcnode *func, int argc,
 	evaltree(func->n.ndefun.body, flags & EV_TESTED);
  funcdone:
 	INT_OFF;
-	if(funcname)
-		free(funcname);
-	funcname = savefuncname;
+	if(exitstatus && eflag) {
+		/* memmory leak is not a problem, we are exiting */
+	} else {
+		if(funcname)
+			free(funcname);
+		funcname = savefuncname;
+	}
 	funcline = savefuncline;
+	lineno = savelineno;
 	freefunc(func);
 	freeparam(&shellparam);
 	shellparam = saveparam;
@@ -10415,7 +10420,7 @@ evalcommand(union node *cmd, int flags)
 	FORCE_INT_ON;
 
  out:
-	if(status && trap[NSIG]) {
+	if((status && trap[NSIG]) && (Eflag || (!Eflag && !funcline))){
 		static bool recursive = 0;
 		if(!recursive) {
 			int savelineno = lineno;
@@ -10425,7 +10430,7 @@ evalcommand(union node *cmd, int flags)
 			status = exitstatus; //RAF: this fix the trap ERR patch
 			recursive = 0;
 			doingtrap = 0;
-			if (errexit) {
+			if (eflag) {
 				lineno = savelineno;
 				exitshell();
 			}
