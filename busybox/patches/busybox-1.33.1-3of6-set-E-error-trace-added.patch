--- src/shell/ash.c	2021-08-14 10:00:16.204385264 +0200
+++ src.new9/shell/ash.c	2021-08-14 09:55:51.625158855 +0200
@@ -336,7 +336,8 @@ static const char *const optletters_optn
 	"a"   "allexport",
 	"b"   "notify",
 	"u"   "nounset",
-	"\0"  "vi"
+	"\0"  "vi",
+	"E"   "errtrace"
 #if BASH_PIPEFAIL
 	,"\0"  "pipefail"
 #endif
@@ -431,16 +432,19 @@ struct globals_misc {
 #define bflag optlist[12]
 #define uflag optlist[13]
 #define viflag optlist[14]
+#define Eflag optlist[15]
 #if BASH_PIPEFAIL
-# define pipefail optlist[15]
+# define pipefail optlist[16]
 #else
 # define pipefail 0
 #endif
 #if DEBUG
-# define nolog optlist[15 + BASH_PIPEFAIL]
-# define debug optlist[16 + BASH_PIPEFAIL]
+# define nolog optlist[16 + BASH_PIPEFAIL]
+# define debug optlist[17 + BASH_PIPEFAIL]
 #endif
 
+#define errexit ((eflag && !funcline) || Eflag)
+
 	/* trap handler commands */
 	/*
 	 * Sigmode records the current value of the signal handlers for the various
@@ -9193,7 +9197,7 @@ evaltree(union node *n, int flags)
 	case NCMD:
 		evalfn = evalcommand;
  checkexit:
-		if (eflag && !(flags & EV_TESTED))
+		if (errexit && !(flags & EV_TESTED))
 			checkexit = ~0;
 		goto calleval;
 	case NFOR:
@@ -10401,7 +10405,7 @@ evalcommand(union node *cmd, int flags)
 			status = exitstatus; //RAF: this fix the trap ERR patch
 			recursive = 0;
 			doingtrap = 0;
-			if (eflag) {
+			if (errexit) {
 				lineno = savelineno;
 				exitshell();
 			}
