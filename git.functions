#!/bin/bash
#
# Copyright (c) Roberto A. Foglietta, 2022
#
# Authors:
#  Roberto A. Foglietta <roberto.foglietta@gmail.com>
#
# SPDX-License-Identifier: MIT
#

function irebase() {
	hash=$(git rev-list --parents -n2 "$1" | tail -n1 | head -c40)
	git rebase -i $hash
}
export -f irebase

function repshrink() {
	git reflog | egrep .
	git gc --auto
	git maintenance run --auto
	git reflog expire --expire=now --all && git gc --prune=now --aggressive
}
export -f repshrink

function lg() {
	git log --abbrev-commit --format=format:'* %C(bold cyan)%h%C(reset) - %C(white)%s%C(reset) %C(bold green)%d%C(reset)' "$@"
}
export -f lg

function lt() {
	git log --graph --abbrev-commit --decorate --format=format:'%C(bold cyan)%h%C(reset) - %C(white)%s%C(reset) %C(bold green)%d%C(reset)' --all "$@"
}
export -f lt

function st() {
	git status "$@"
}
export -f st

function ff() {
	local opt
	if [ "$1" == "-s" ]; then
		opt="--staged"
		shift
	fi
	git diff $opt "$@"
}
export -f ff

function rl() {
	git reflog
}
export -f rl

function add() {
	git add "$@"
}
export -f add

function cm() {
	git commit --signoff "$@"
}
export -f cm

function amend() {
	git commit --amend
}
export -f amend

function rebcont() {
	git rebase --continue
}
export -f rebcont

function editorset() {
	 git config --global core.editor "$1"
}
export -f editorset

function rpull() {
	git pull --rebase
}
export -f rpull

function fpush() {
	git push --force
}
export -f fpush

function co() {
	git checkout "$@"
}
export -f co

function sw() {
	git show "$@"
}
export -f sw

function ccache() {
	local -i t=3600 runcmd=1
	local d=$(git rev-parse --show-toplevel)
	if [ "x$1" == "x--save" -a -n "$2" ]; then
		echo "$2" > $d/.gitpasswd
		echo -e "\nNOTICE: password saved in $d/.gitpasswd\n"
		history -d -1 2>/dev/null || history -c
		shift 2
	elif [ "x$1" == "x--stop" ]; then
		t=0; runcmd=0
	elif [ "x$1" == "x--time" -a -n "$2" ]; then
		t=$2; [ $t -lt 600 ] && t=600
		echo -e "\nNOTICE: timeout '$2' has been set to $t seconds\n"
		shift 2
	elif [ "x$1" == "x--help" ]; then
		echo -e "\nUSAGE: cchace [ --time 14400 | --save '.gitpasswd' | --stop | --help ]\n"
		return
	fi
	git config credential.helper store
	git config credential.helper "cache --timeout=$t"
	if [ "$t" == "0" ]; then
		echo -e "git password cache disabled"
	else
		if [ -r $d/.gitpasswd ]; then
			if ! grep -q .gitpasswd $d/.gitignore; then
				echo .gitpasswd >> $d/.gitignore
				git status $d/.gitignore | sed -e "s,\(.*\),\t\\1," | egrep . \
					&& echo -e "\nWARNING: add and commit this change\n"
			fi
			git -c credential.helper='!f() { echo "password=$(cat '$d'/.gitpasswd)"; }; f' push --dry-run 2>/dev/null
		else
			git fetch origin
		fi
		echo -e "git password cache enable for ${t}s eq. to $[t/3600]h $[(t%3600)/60]m $[t%60]s\n"
	fi
	test  "$1" != "" -a "$runcmd" == "1" && eval "$@"
}
export -f ccache

function rcont() {
	git rebase --continue
}
export -f rcont

function stash() {
	git stash
}
export -f stash

function pop() {
	git stash pop
}
export -f pop

function tagdel() {
	git push --delete origin "$1"
	git tag -d "$1"
}
export -f tagdel

function tagadd() {
	git tag -a "$1" "$2" -m "$1" && \
	git push origin --tags
}
export -f tagadd

function reflog() {
	git reflog "$@"
}
export -f reflog

function push() {
	git push "$@"
}
export -f push

function pull() {
	git pull "$@"
}
export -f pull
